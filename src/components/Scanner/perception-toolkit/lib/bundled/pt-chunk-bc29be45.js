/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

perceptionToolkitLoader("./pt-chunk-bc29be45.js",["exports"],function(t){"use strict";function e(t,e=Number.NEGATIVE_INFINITY,n=Number.POSITIVE_INFINITY){return Math.max(e,Math.min(n,t))}function n(t){return 1-Math.pow(1-t,3)}const o=new WeakMap;function i(t,{from:i=1,to:r=0,duration:s=250,ease:a=n}={}){return new Promise(n=>{const l=o.get(t);l&&(cancelAnimationFrame(l.id),o.delete(t),l.resolve()),t.style.opacity=i.toString();const c=self.performance.now(),h=()=>{const l=e((self.performance.now()-c)/s,0,1),d=i+(r-i)*a(l);t.style.opacity=d.toString(),l<1?o.set(t,{id:requestAnimationFrame(h),resolve:n}):(t.style.opacity=r.toString(),o.delete(t),n())};o.set(t,{id:requestAnimationFrame(h),resolve:n})})}const r={name:"IntersectionObserver",supported:async()=>"IntersectionObserver"in self&&"IntersectionObserverEntry"in self};function s(t,e,n){const o=new CustomEvent(t,{bubbles:!0,detail:n});return e.dispatchEvent(o),o}function a(t){return new Promise((e,n)=>{const o=document.createElement("script");o.src=t,o.onload=e,o.onerror=n,document.head.appendChild(o)})}var l;function c(e,n=t.DEBUG_LEVEL.INFO,o){if("undefined"==typeof DEBUG||n>DEBUG)return;const i=function(e,n){let o="";switch(e){case t.DEBUG_LEVEL.WARNING:o="WARNING";break;case t.DEBUG_LEVEL.ERROR:o="ERROR";break;default:o="INFO"}if(!n)return`${o}:`;return`${o} [${n}]:`}(n,o);switch(n){case t.DEBUG_LEVEL.ERROR:console.error(i,e);break;case t.DEBUG_LEVEL.WARNING:console.warn(i,e);break;default:console.log(i,e)}}(l=t.DEBUG_LEVEL||(t.DEBUG_LEVEL={}))[l.VERBOSE=4]="VERBOSE",l[l.INFO=3]="INFO",l[l.WARNING=2]="WARNING",l[l.ERROR=1]="ERROR",l[l.NONE=0]="NONE";const h="\n:host {\n  --background: #FFF;\n  --borderRadius: 4px;\n  --color: #333;\n  --fontFamily: 'Arial', 'Helvetica', sans-serif;\n  --padding: 8px 8px 36px 8px;\n  --buttonBottomMargin: 8px;\n  --buttonSideMargin: 4px;\n  --buttonActiveColor: #444;\n  --buttonHoverColor: #666;\n  --buttonInactiveColor: #AAA;\n  --contentBorderRadius: 0px;\n\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  outline: none;\n  z-index: 1;\n  overflow: auto;\n\n  padding: var(--padding);\n  border-radius: var(--borderRadius);\n  font-family: var(--fontFamily);\n  background: var(--background);\n}\n\n#container {\n  color: var(--color);\n  overflow: hidden;\n  border-radius: var(--contentBorderRadius);\n  display: block;\n  cursor: pointer;\n}\n\nslot {\n  display: flex;\n  overflow-x: scroll;\n  scroll-snap-type: x mandatory;\n  scrollbar-width: none;\n}\n\nslot::-webkit-scrollbar {\n  display: none;\n}\n\n::slotted(*) {\n  flex: 1 0 auto;\n  scroll-snap-align: start;\n}\n\n#buttons {\n  display: flex;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: var(--buttonBottomMargin);\n}\n\n#buttons button {\n  margin: 0 var(--buttonSideMargin);\n  font-size: 0;\n  width: 18px;\n  height: 18px;\n  position: relative;\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n\n#buttons button::after {\n  content: '';\n  background: var(--buttonInactiveColor);\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\n#buttons button::after:hover {\n  background: var(--buttonHoverColor);\n}\n\n#buttons button.active::after {\n  background: var(--buttonActiveColor);\n}\n",d='\n<div id="container">\n  <slot></slot>\n  </div>\n<div id="buttons"></div>',u="/third_party/intersection-observer/intersection-observer-polyfill.js";class b extends HTMLElement{constructor({polyfillPrefix:e=""}={}){super(),this.root=this.attachShadow({mode:"open"}),this.itemsInView=new Set,this.modeInternal="scroll",this.itemInternal=0,this.itemMax=0,this.widthInternal=0,this.heightInternal=0,this.onSlotChangeBound=this.onSlotChange.bind(this),this.onContainerClickBound=this.onContainerClick.bind(this),this.onButtonClickBound=this.onButtonClick.bind(this),this.onIntersectionBound=this.onIntersection.bind(this),this.ready=async function({force:e=!1,polyfillPrefix:n=""}){if(!e&&await r.supported())return!0;try{return await a(`${n}${u}`),IntersectionObserver.prototype.POLL_INTERVAL=300,c("Loaded IntersectionObserver polyfill",t.DEBUG_LEVEL.INFO,"Onboarding"),!0}catch(e){return c("Intersection Observer polyfill load failed",t.DEBUG_LEVEL.ERROR,"Onboarding"),!1}}({polyfillPrefix:e})}static get observedAttributes(){return["width","height","mode"]}get width(){return this.widthInternal}set width(t){Number.isNaN(t)&&(t=0),this.setAttribute("width",t.toString())}get height(){return this.heightInternal}set height(t){Number.isNaN(t)&&(t=0),this.setAttribute("height",t.toString())}get item(){return this.itemInternal}get mode(){return this.modeInternal}set mode(t){this.setAttribute("mode",t)}connectedCallback(){this.ready.then(()=>{this.root.innerHTML=`<style>${h}</style> ${d}`;const t=this.root.querySelector("slot"),e=this.root.querySelector("#container"),n=this.root.querySelector("#buttons");t.addEventListener("slotchange",this.onSlotChangeBound),e.addEventListener("click",this.onContainerClickBound),n.addEventListener("click",this.onButtonClickBound),this.setAttribute("tabindex","0"),this.observer=new IntersectionObserver(this.onIntersectionBound,{root:e,rootMargin:"-5px",threshold:0}),this.updateCardDimensions(),this.observeChildren(),this.onSlotChange()})}disconnectedCallback(){const t=this.root.querySelector("slot"),e=this.root.querySelector("#container"),n=this.root.querySelector("#buttons");t.removeEventListener("slotchange",this.onSlotChangeBound),e.removeEventListener("click",this.onContainerClickBound),n.addEventListener("click",this.onButtonClickBound),this.unobserveChildren(),this.root.innerHTML=""}attributeChangedCallback(t,e,n){switch(t){case"width":{const t=Number(n);this.widthInternal=Number.isNaN(t)?0:t;break}case"height":{const t=Number(n);this.heightInternal=Number.isNaN(t)?0:t;break}case"mode":this.modeInternal="fade"===n?"fade":"scroll"}this.updateCardDimensions()}async next(){const t=this.itemInternal;this.itemInternal=e(this.itemInternal+1,0,this.itemMax-1),await this.gotoItem({from:t}),t===this.itemInternal&&s(b.onboardingFinishedEvent,this,{item:this.itemInternal})}async gotoItem({to:t=this.itemInternal,from:e=-1}={}){const n=this.getSlotElements();n[t]&&(-1===e||n[e])&&e!==t&&("fade"===this.mode?(-1!==e&&(await i(n[e],{from:1,to:0}),n[e].style.opacity="1"),n[t].scrollIntoView(),this.itemsInView.add(n[t]),await i(n[t],{from:0,to:1})):n[t].scrollIntoView({behavior:"smooth"}),this.setLabel())}setLabel(){const t=this.getSlotElements();t[this.item]&&this.setAttribute("aria-label",t[this.item].getAttribute("alt")||"No description provided")}onContainerClick(){this.next()}async onButtonClick(t){const e=this.root.querySelector("#buttons");let n=Array.from(e.childNodes).indexOf(t.target);-1===n&&(n=0);const o=this.itemInternal;this.itemInternal=n,await this.gotoItem({from:o})}onIntersection(t){const e=this.getSlotElements();for(const n of t){if(n.isIntersecting?this.itemsInView.add(n.target):this.itemsInView.delete(n.target),1!==this.itemsInView.size)continue;const t=Array.from(this.itemsInView);this.itemInternal=e.indexOf(t[0]),s(b.itemChangedEvent,this,{item:this.itemInternal})}const n=this.root.querySelectorAll("#buttons button");for(const[t,e]of n.entries())e.classList.toggle("active",t===this.itemInternal)}observeChildren(){const t=this.getSlotElements();for(const e of t)this.observer.observe(e)}unobserveChildren(){const t=this.getSlotElements();for(const e of t)this.observer.observe(e)}getSlotElements(){const t=this.root.querySelector("slot");return t?"assignedElements"in t?t.assignedElements():t.assignedNodes().filter(t=>t.nodeType===this.ELEMENT_NODE):[]}onSlotChange(){const t=this.root.querySelector("#buttons"),e=this.getSlotElements();if(this.itemMax=e.length,t){t.innerHTML="";for(let e=0;e<this.itemMax;e++){const n=document.createElement("button");n.textContent=`${e+1}`,t.appendChild(n)}this.setLabel()}}updateCardDimensions(){const t=this.root.querySelector("#container");t&&(t.style.width=`${this.width}px`,t.style.height=`${this.height}px`)}}b.onboardingFinishedEvent="onboardingfinished",b.itemChangedEvent="itemchanged",b.defaultTagName="onboarding-card",t.OnboardingCard=b,t.clamp=e,t.enableLogLevel=function(t){self.DEBUG=t},t.fade=i,t.fire=s,t.injectScript=a,t.log=c});
